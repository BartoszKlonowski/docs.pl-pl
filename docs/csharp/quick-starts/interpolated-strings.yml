### YamlMime:Tutorial
title: <span data-ttu-id="dce4b-101">Ciąg interpolacji w języku C#</span><span class="sxs-lookup"><span data-stu-id="dce4b-101">String interpolation in C#</span></span>
metadata:
  title: Ciąg interpolacji interaktywnego samouczka — Przewodniki Szybki Start C#
  description: W tym samouczku umożliwia przeglądarkę interaktywnie Eksploruj funkcji interpolacji ciągu języka C#. Pisanie kodu C# i wyświetlić wyniki kompilowania i uruchamiania kodu bezpośrednio w przeglądarce.
  audience: Developer
  ms.custom: mvc
  ms.topic: get-started-article
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection.yml
  nextTutorialTitle: <span data-ttu-id="dce4b-105">Kolekcje w języku C#</span><span class="sxs-lookup"><span data-stu-id="dce4b-105">Collections in C#</span></span>
  ms.openlocfilehash: b5db200ea9878368594a900221d11337715fb1f4
  ms.sourcegitcommit: 77d9a94dac4c05827ed0663d95e0f9ad35d6682e
  ms.translationtype: MT
  ms.contentlocale: pl-PL
  ms.lasthandoff: 05/24/2018
items:
- durationInMinutes: 2
  content: >
    <span data-ttu-id="dce4b-106">Tego przewodnika Szybki Start zawiera wskazówki dotyczące używania [ciągu interpolacji](../language-reference/tokens/interpolated.md) do wstawienia wartości w jednym ciągu.</span><span class="sxs-lookup"><span data-stu-id="dce4b-106">This quickstart teaches you how to use [string interpolation](../language-reference/tokens/interpolated.md) to insert values into a single string.</span></span> <span data-ttu-id="dce4b-107">Możesz również sposób kontrolowania Reprezentacja tekstowa tych wartości w ciągu wynik.</span><span class="sxs-lookup"><span data-stu-id="dce4b-107">You also learn how to control text representations of those values in the result string.</span></span> <span data-ttu-id="dce4b-108">Aby zapisać i uruchomić kod w języku C# za pomocą przeglądarki i można natychmiast zobaczyć wyniki utworzonych.</span><span class="sxs-lookup"><span data-stu-id="dce4b-108">You use your browser to write and run C# code and can immediately see the produced results.</span></span>
- title: <span data-ttu-id="dce4b-109">Tworzenie ciągu interpolowanym</span><span class="sxs-lookup"><span data-stu-id="dce4b-109">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: "<span data-ttu-id=\"dce4b-110\">Uruchom poniższy kod w oknie interaktywnym.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"dce4b-111\">W tym celu wpisz kod w oknie interaktywnym (Zastąp `\\<name>` nazwą) i wybierz **Uruchom**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-111\">To do that, type the code in the interactive window (replace `\\<name>` with your name) and select **Run**:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"dce4b-112\">Podczas uruchamiania kodu, **dane wyjściowe** wyświetla ciąg zawierający nazwę w pozdrowienie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-112\">When you run the code, **Output** displays a string that includes your name in the greeting.</span></span> <span data-ttu-id=\"dce4b-113\">Argument ciągu <xref:System.Console.WriteLine%2A> jest wywołanie metody *interpolowane ciąg*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-113\">The string argument of the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"dce4b-114\">Jest to rodzaj szablonu, który pozwala utworzyć jeden ciąg (o nazwie *powoduje ciąg*) z ciągu, który zawiera osadzony kod.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-114\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"dce4b-115\">Ciągi interpolowane są szczególnie użyteczne w przypadku wstawiania wartości na ciąg lub łączenie (łączenie) kilku ciągów.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-115\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) several strings.</span></span> \n\n<span data-ttu-id=\"dce4b-116\">W powyższym przykładzie zawiera dwa elementy, które muszą mieć co ciągu interpolowanym:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-116\">The example above contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"dce4b-117\">Literał ciągu rozpoczynający się od `$` znak przed jego otwierania przez cudzysłów znaków.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-117\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"dce4b-118\">Nie może być odstępów między `$` symboli i znaku cudzysłowu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-118\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"dce4b-119\">(Jeśli chcesz zobaczyć co się stanie w przypadku obejmują jeden, Wstaw spację po `$` znak w oknie interaktywnym i uruchom zaktualizowanego kodu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-119\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and run the updated code.</span></span> <span data-ttu-id=\"dce4b-120\">Kompilator języka C# narzeka, \"Nieoczekiwany znak\"$\"\".)</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-120\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"dce4b-121\">Co najmniej jeden *interpolowane wyrażenia*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-121\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"dce4b-122\">Wskazuje wyrażenie interpolowane otwierający i zamykający nawias klamrowy (`{` i `}`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-122\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"dce4b-123\">Możesz też zaznaczyć dowolne C# wyrażenie zwracające wartość (w tym `null`) w nawiasach klamrowych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-123\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"dce4b-124\">Poniżej przedstawiono kilka innych przykładów interpolacji ciągu z innych typów danych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-124\">Let's try a few more string interpolation examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"dce4b-125\">Jest to środowisko programowania online w wersji zapoznawczej.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-125\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"dce4b-126\">Jeśli wystąpią problemy, zgłoś je [w repozytorium dotnet/spróbuj](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-126\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="dce4b-127">Obejmują różne typy danych</span><span class="sxs-lookup"><span data-stu-id="dce4b-127">Include different data types</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"dce4b-128\">W poprzednim kroku interpolacji ciąg jest używany do wstawiania jeden ciąg wewnątrz innego.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-128\">In the previous step, you used string interpolation to insert one string inside of another.</span></span> <span data-ttu-id=\"dce4b-129\">Wynik wyrażenia interpolowane może być jednak każdego typu danych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-129\">The result of an interpolated expression can be of any data type, though.</span></span> <span data-ttu-id=\"dce4b-130\">Załóżmy obejmują wartości różnych typów danych w ciągu interpolowanym.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-130\">Let's include values of various data types in an interpolated string.</span></span> \n\n<span data-ttu-id=\"dce4b-131\">W poniższym przykładzie najpierw definiujemy [klasy](../programming-guide/classes-and-structs/classes.md) — typ danych `Vegetable` mający `Name` [właściwości](../properties.md) i `ToString` [metody](../methods.md), która [zastępuje](../language-reference/keywords/override.md) zachowanie <xref:System.Object.ToString?displayProperty=nameWithType> metody.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-131\">In the following example, first, we define a [class](../programming-guide/classes-and-structs/classes.md) data type `Vegetable` that has the `Name` [property](../properties.md) and the `ToString` [method](../methods.md), which [overrides](../language-reference/keywords/override.md) the behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id=\"dce4b-132\">[ `public` Modyfikator dostępu](../language-reference/keywords/public.md) udostępnia tej metody do dowolnego kod klienta w celu uzyskania reprezentację ciągu `Vegetable` wystąpienia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-132\">The [`public` access modifier](../language-reference/keywords/public.md) makes that method available to any client code to get the string representation of a `Vegetable` instance.</span></span> <span data-ttu-id=\"dce4b-133\">W przykładzie `Vegetable.ToString` metoda zwraca wartość `Name` właściwość, która została zainicjowana w `Vegetable` [Konstruktor](../programming-guide/classes-and-structs/constructors.md): `Vegetable(string name) => Name = name;`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-133\">In the example the `Vegetable.ToString` method returns the value of the `Name` property that is initialized at the `Vegetable` [constructor](../programming-guide/classes-and-structs/constructors.md): `Vegetable(string name) => Name = name;`.</span></span> <span data-ttu-id=\"dce4b-134\">Następnie utwórz wystąpienie `Vegetable` przy użyciu [ `new` — słowo kluczowe](../language-reference/keywords/new-operator.md) i podając nazwę parametru konstruktora `Vegetable`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-134\">Then we create an instance of the `Vegetable` class by using [`new` keyword](../language-reference/keywords/new-operator.md) and providing a name parameter for the constructor `Vegetable`.</span></span> <span data-ttu-id=\"dce4b-135\">Na koniec przeprowadzamy takim wystąpieniu w ciągu interpolowanym zawierającej również <xref:System.DateTime> wartość, <xref:System.Decimal> wartości i `Unit` [wyliczenie](../programming-guide/enumeration-types.md) wartość.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-135\">Finally, we include that instance into an interpolated string that also contains a <xref:System.DateTime> value, a <xref:System.Decimal> value, and a `Unit` [enumeration](../programming-guide/enumeration-types.md) value.</span></span> <span data-ttu-id=\"dce4b-136\">W oknie interaktywnym, uruchom następujący kod:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-136\">Run the following code in the interactive window:</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic enum Unit { item, pound, ounce, dozen };\n\nvar item = new Vegetable(\"eggplant\");\nvar date = DateTime.Now;\nvar price = 1.99m;\nvar unit = Unit.item;\nConsole.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n```\n\n<span data-ttu-id=\"dce4b-137\">Należy pamiętać, że interpolowanego wyrażenia `item` w ciągu interpolowanym jest rozpoznawana jako tekst \"oberżynowego\" w ciągu wynik.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-137\">Note that the interpolated expression `item` in the interpolated string resolves to the text \"eggplant\" in the result string.</span></span> <span data-ttu-id=\"dce4b-138\">Wynika to, gdy typ wyniku wyrażenia nie jest ciągiem, wynik został rozwiązany na ciąg w następujący sposób:</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-138\">That's because, when the type of the expression result is not a string, the result is resolved to a string in the following way:</span></span>\n\n- <span data-ttu-id=\"dce4b-139\">Jeśli interpolowanego wyrażenia `null`, ciąg pusty (\"\", lub <xref:System.String.Empty?displayProperty=nameWithType>) jest używany.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-139\">If the interpolated expression evaluates to `null`, an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>) is used.</span></span>\n\n- <span data-ttu-id=\"dce4b-140\">Jeśli interpolowanego wyrażenia nie być `null`, zwykle `ToString` wywoływana jest metoda typu wyniku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-140\">If the interpolated expression doesn't evaluate to `null`, typically the `ToString` method of the result type is called.</span></span> <span data-ttu-id=\"dce4b-141\">Można to sprawdzić, aktualizując wykonania `Vegetable.ToString` metody.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-141\">You can test this by updating the implementation of the `Vegetable.ToString` method.</span></span> <span data-ttu-id=\"dce4b-142\">To nie może nawet potrzeby do zaimplementowania `ToString` metody, ponieważ każdy typ ma niektórych implementacja tej metody.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-142\">You might not even need to implement the `ToString` method since every type has some implementation of this method.</span></span> <span data-ttu-id=\"dce4b-143\">Aby to sprawdzić, w komentarz definicję `Vegetable.ToString` metody w tym przykładzie (w tym celu umieść symbol komentarza `//`, przed nim).</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-143\">To test this, comment out the definition of the `Vegetable.ToString` method in the example (to do that, put a comment symbol, `//`, in front of it).</span></span> <span data-ttu-id=\"dce4b-144\">W danych wyjściowych, ciąg \"oberżynowego\" zostanie zastąpiony w pełni kwalifikowaną nazwę typu (przestrzeń nazw zdefiniowana przez REPL C#, wraz z nazwą typu), który jest domyślnym zachowaniem z <xref:System.Object.ToString?displayProperty=nameWithType> metody.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-144\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id=\"dce4b-145\">Domyślne zachowanie `ToString` metodą wartość wyliczenia jest zwraca reprezentację ciągu wartości.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-145\">The default behavior of the `ToString` method for an enumeration value is to return the string representation of the value.</span></span>    \n\n<span data-ttu-id=\"dce4b-146\">W danych wyjściowych w tym przykładzie Data jest zbyt precyzyjna (cena oberżynowego nie zmienia co sekundę), a wartość ceny nie oznacza jednostkę waluty.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-146\">In the output from this example, the date is too precise (the price of eggplant doesn't change every second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"dce4b-147\">W następnym kroku dowiesz się, jak rozwiązać te problemy kontrolując formatu ciągu reprezentacje wyników wyrażenia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-147\">In the next step, you'll learn how to fix those issues by controlling the format of string representations of the expression results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"dce4b-148\">Jest to środowisko programowania online w wersji zapoznawczej.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-148\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"dce4b-149\">Jeśli wystąpią problemy, zgłoś je [w repozytorium dotnet/spróbuj](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-149\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="dce4b-150">Formant formatowanie interpolowanego wyrażenia</span><span class="sxs-lookup"><span data-stu-id="dce4b-150">Control the formatting of interpolated expressions</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="dce4b-151">W poprzednim kroku nieprawidłowo sformatowany dwa ciągi, które zostały wstawione do ciągu wynik.</span><span class="sxs-lookup"><span data-stu-id="dce4b-151">In the previous step, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id="dce4b-152">Jeden jest wartość daty i godziny, dla którego został właściwe tylko data.</span><span class="sxs-lookup"><span data-stu-id="dce4b-152">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id="dce4b-153">Drugi był cenę nie wskazywać jego jednostkę waluty.</span><span class="sxs-lookup"><span data-stu-id="dce4b-153">The second was a price that didn't indicate its unit of currency.</span></span> <span data-ttu-id="dce4b-154">Problemy z obu łatwych do adresu.</span><span class="sxs-lookup"><span data-stu-id="dce4b-154">Both issues are easy to address.</span></span> <span data-ttu-id="dce4b-155">Ciąg interpolacji umożliwia określenie *ciągi formatujące* umożliwiające sterowanie formatowanie poszczególnych typów.</span><span class="sxs-lookup"><span data-stu-id="dce4b-155">String interpolation lets you specify *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id="dce4b-156">Zmodyfikuj wywołanie `Console.WriteLine` z poprzedniego przykładu, aby uwzględnić ciągi formatujące datę i cenę wyrażeń, jak pokazano w następującym wierszu:</span><span class="sxs-lookup"><span data-stu-id="dce4b-156">Modify the call to `Console.WriteLine` from the previous example to include the format strings for the date and price expressions as shown in the following line:</span></span>


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item} was {price:C2} per {unit}.");

    ```


    <span data-ttu-id="dce4b-157">Podaj ciąg formatu, używając interpolowanego wyrażenia dwukropka (":"), a ciąg formatu.</span><span class="sxs-lookup"><span data-stu-id="dce4b-157">You specify a format string by following the interpolated expression with a colon (":") and the format string.</span></span> <span data-ttu-id="dce4b-158">"d" jest [standardowa Data i godzina ciąg formatu](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) reprezentujący format daty krótkiej.</span><span class="sxs-lookup"><span data-stu-id="dce4b-158">"d" is a [standard date and time format string](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id="dce4b-159">"C2" jest [ciągu standardowego formatu liczbowego](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) reprezentujący liczbę jako wartość walutową z dwóch cyfr po punkcie dziesiętnym.</span><span class="sxs-lookup"><span data-stu-id="dce4b-159">"C2" is a [standard numeric format string](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>


    <span data-ttu-id="dce4b-160">Liczba typów w bibliotek .NET obsługuje zestaw wstępnie zdefiniowanych ciągi formatów.</span><span class="sxs-lookup"><span data-stu-id="dce4b-160">A number of types in the .NET libraries support a predefined set of format strings.</span></span> <span data-ttu-id="dce4b-161">Obejmuje to wszystkie typy liczbowe oraz typy daty i godziny.</span><span class="sxs-lookup"><span data-stu-id="dce4b-161">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id="dce4b-162">Pełną listę typów, które obsługują ciągi formatów, zobacz [ciągi formatów i typy biblioteki klas .NET](../../standard/base-types/formatting-types.md#stringRef) w [typy formatowania w .NET](../../standard/base-types/formatting-types.md) artykułu.</span><span class="sxs-lookup"><span data-stu-id="dce4b-162">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span>


    <span data-ttu-id="dce4b-163">Spróbuj zmodyfikować ciągi formatów w przykładzie, aby zobaczyć, jak wpływają one na format daty i godziny oraz wartość liczbową.</span><span class="sxs-lookup"><span data-stu-id="dce4b-163">Try modifying the format strings in the example to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id="dce4b-164">Zmiana "d" `{date:d}` "t" (do wyświetlania na format godziny krótkiej), "y" (Aby wyświetlić rok i miesiąc), a "yyyy" (do wyświetlania roku w postaci czterech cyfr).</span><span class="sxs-lookup"><span data-stu-id="dce4b-164">Change the "d" in `{date:d}` to "t" (to display the short time format), "y" (to display the year and month), and "yyyy" (to display the year as a four-digit number).</span></span> <span data-ttu-id="dce4b-165">Zmiana "C2" `{price:C2}` "e" (w notacji wykładniczej) i "F3" (dla wartość liczbową z trzech cyfr po punkcie dziesiętnym).</span><span class="sxs-lookup"><span data-stu-id="dce4b-165">Change the "C2" in `{price:C2}` to "e" (for exponential notation) and "F3" (for a numeric value with three digits after the decimal point).</span></span>


    <span data-ttu-id="dce4b-166">Oprócz kontrolowanie formatowania, można też kontrolować szerokość pola i wyrównanie sformatowany ciągów, które znajdują się w ciągu wynik.</span><span class="sxs-lookup"><span data-stu-id="dce4b-166">In addition to controlling formatting, you can also control the field width and alignment of the formatted strings that are included in the result string.</span></span> <span data-ttu-id="dce4b-167">W następnym kroku dowiesz się, jak to zrobić.</span><span class="sxs-lookup"><span data-stu-id="dce4b-167">In the next step, you'll learn how to do this.</span></span>


    > [!NOTE]

    > <span data-ttu-id="dce4b-168">Jest to środowisko programowania online w wersji zapoznawczej.</span><span class="sxs-lookup"><span data-stu-id="dce4b-168">This online coding experience is in preview mode.</span></span> <span data-ttu-id="dce4b-169">Jeśli wystąpią problemy, zgłoś je [w repozytorium dotnet/spróbuj](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="dce4b-169">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="dce4b-170">Szerokość pola i wyrównanie interpolowanego wyrażenia</span><span class="sxs-lookup"><span data-stu-id="dce4b-170">Control the field width and alignment of interpolated expressions</span></span>
  durationInMinutes: 6
  content: >
    <span data-ttu-id="dce4b-171">Zwykle podczas formatowania wynik wyrażenia interpolowane na ciąg, ten ciąg znajduje się w ciągu wynik bez początkowe lub końcowe spacje.</span><span class="sxs-lookup"><span data-stu-id="dce4b-171">Ordinarily, when the result of an interpolated expression is formatted to string, that string is included in a result string without leading or trailing spaces.</span></span> <span data-ttu-id="dce4b-172">Szczególnie podczas pracy z zestawem danych, możliwość kontrolowania szerokość pola i pomaga wyrównanie tekstu, aby wygenerować bardziej czytelny dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="dce4b-172">Particularly when you work with a set of data, being able to control a field width and text alignment helps to produce a more readable output.</span></span> <span data-ttu-id="dce4b-173">Aby to sprawdzić, uruchom następujący kod:</span><span class="sxs-lookup"><span data-stu-id="dce4b-173">To see this, run the following code:</span></span>


    ```csharp
      var inventory = new Dictionary<string, int>()
      {
          ["hammer, ball pein"] = 18,
          ["hammer, cross pein"] = 5,
          ["screwdriver, Phillips #2"] = 14
      };

      Console.WriteLine($"Inventory on {DateTime.Now:d}");
      Console.WriteLine(" ");
      Console.WriteLine($"|{"Item",-25}|{"Quantity",10}|");
      foreach (var item in inventory)
         Console.WriteLine($"|{item.Key,-25}|{item.Value,10}|");
    ```


    <span data-ttu-id="dce4b-174">Nazwy elementów są wyrównane do lewej, a ich ilości są wyrównane do lewej.</span><span class="sxs-lookup"><span data-stu-id="dce4b-174">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id="dce4b-175">Określ wyrównanie przez dodanie przecinka (",") po interpolowanego wyrażenia i wyznaczające *minimalna* szerokości pola.</span><span class="sxs-lookup"><span data-stu-id="dce4b-175">You specify the alignment by adding a comma (",") after an interpolated expression and designating the *minimum* field width.</span></span> <span data-ttu-id="dce4b-176">Jeśli określona wartość jest liczbą dodatnią, to pole jest wyrównany do prawej.</span><span class="sxs-lookup"><span data-stu-id="dce4b-176">If the specified value is a positive number, the field is right-aligned.</span></span> <span data-ttu-id="dce4b-177">Jeśli jest liczbą ujemną, to pole jest wyrównane do lewej.</span><span class="sxs-lookup"><span data-stu-id="dce4b-177">If it is a negative number, the field is left-aligned.</span></span>


    <span data-ttu-id="dce4b-178">Spróbuj usunąć ujemna znaki z `{"Item",-25}` i `{item.Key,-25}` kodu i ponownie uruchomić przykład.</span><span class="sxs-lookup"><span data-stu-id="dce4b-178">Try removing the negative signs from the `{"Item",-25}` and `{item.Key,-25}` code and run the example again.</span></span> <span data-ttu-id="dce4b-179">Teraz, nazwy elementów jest wyrównany do prawej.</span><span class="sxs-lookup"><span data-stu-id="dce4b-179">This time, the item names are right-aligned.</span></span>


    <span data-ttu-id="dce4b-180">Specyfikator wyrównania i ciągu formatu dla pojedynczego wyrażenia interpolowane można łączyć.</span><span class="sxs-lookup"><span data-stu-id="dce4b-180">You can combine an alignment specifier and a format string for a single interpolated expression.</span></span> <span data-ttu-id="dce4b-181">W tym celu Określ wyrównanie najpierw następuje dwukropek i ciąg formatu.</span><span class="sxs-lookup"><span data-stu-id="dce4b-181">To do that, specify the alignment first, followed by a colon and the format string.</span></span> <span data-ttu-id="dce4b-182">Wykonaj następujący kod, który zawiera trzy ciągi sformatowane o szerokości zdefiniowanych pól:</span><span class="sxs-lookup"><span data-stu-id="dce4b-182">Try the following code that displays three formatted strings with defined field widths:</span></span>


    ```csharp

    Console.WriteLine($"[{DateTime.Now,-20:d}] Hour [{DateTime.Now,-10:HH}] [{1063.342,15:N2}] feet");

    ```


    > [!NOTE]

    > <span data-ttu-id="dce4b-183">Jest to środowisko programowania online w wersji zapoznawczej.</span><span class="sxs-lookup"><span data-stu-id="dce4b-183">This online coding experience is in preview mode.</span></span> <span data-ttu-id="dce4b-184">Jeśli wystąpią problemy, zgłoś je [w repozytorium dotnet/spróbuj](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="dce4b-184">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: "<span data-ttu-id=\"dce4b-185\">Zakończono szybkiego startu interpolacji ciągu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-185\">You've completed the string interpolation quickstart.</span></span> \n\n<span data-ttu-id=\"dce4b-186\">Te przewodniki Szybki Start można kontynuować w środowisku projektowania lokalnego.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-186\">You can continue these quickstarts in your own local development environment.</span></span> <span data-ttu-id=\"dce4b-187\">Poznaj podstawy z [lokalne działania projektowe](local-environment.md) , a następnie wybierz Szybki Start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-187\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"dce4b-188\">Możesz spróbować tego samego typu Szybki Start, bezpośrednie przejście do następnej procedury szybkiego startu lub uruchom ponownie z [numery w języku C#](numbers-in-csharp-local.md) Szybki Start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-188\">You can try this same quickstart, move directly to the next quickstart, or start again with the [Numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"dce4b-189\">Aby uzyskać więcej informacji, zobacz [ciągu interpolacji](../language-reference/tokens/interpolated.md) tematu i [ciągu interpolacji w języku C#](../tutorials/string-interpolation.md) samouczka.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dce4b-189\">For more information, see the [String interpolation](../language-reference/tokens/interpolated.md) topic and the [String interpolation in C#](../tutorials/string-interpolation.md) tutorial.</span></span>"
