### YamlMime:Tutorial
title: <span data-ttu-id="5d589-101">Ciągi interpolowane w języku C#</span><span class="sxs-lookup"><span data-stu-id="5d589-101">Interpolated strings in C#</span></span>
metadata:
  title: Ciągi interpolowane interaktywnego samouczka — Przewodniki Szybki Start C#
  description: W tym samouczku użyjesz przeglądarki interakcyjnie korzystać z funkcji ciągu interpolowanym C#. Pisanie kodu C# i wyświetlić wyniki kompilowania i uruchamiania kodu bezpośrednio w przeglądarce.
  audience: Developer
  ms.custom: mvc
  ms.topic: get-started-article
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection
  nextTutorialTitle: <span data-ttu-id="5d589-105">Kolekcje w języku C#</span><span class="sxs-lookup"><span data-stu-id="5d589-105">Collections in C#</span></span>
  ms.openlocfilehash: 7e1de34c9075826a6fcb6bf71cb01bfbd5c215ca
  ms.sourcegitcommit: 935d5267c44f9bce801468ef95f44572f1417e8c
  ms.translationtype: MT
  ms.contentlocale: pl-PL
  ms.lasthandoff: 03/28/2018
items:
- durationInMinutes: 2
  content: >
    <span data-ttu-id="5d589-106">Ta opcja szybkiego startu uczy sposób użycia ciągi interpolowane w języku C# do wstawienia wartości do ciągu wyjściowego pojedynczego interaktywnie.</span><span class="sxs-lookup"><span data-stu-id="5d589-106">This quickstart teaches you how to use interpolated strings in C# to insert values into a single ouput string interactively.</span></span> <span data-ttu-id="5d589-107">Pisanie kodu C# za pomocą przeglądarki i można natychmiast zobaczyć wyniki kompilowania i uruchamiania kodu.</span><span class="sxs-lookup"><span data-stu-id="5d589-107">You use your browser to write C# code and can immediately see the results of compiling and running your code.</span></span> <span data-ttu-id="5d589-108">Procedury szybkiego startu zawiera szereg lekcje, które ciągów, wstawienia wartości do ciągów i sformatować te wartości na różne sposoby.</span><span class="sxs-lookup"><span data-stu-id="5d589-108">The quickstart contains a series of lessons that concatenate strings, insert values into strings, and format those values in different ways.</span></span>
- title: <span data-ttu-id="5d589-109">Tworzenie ciągu interpolowanym</span><span class="sxs-lookup"><span data-stu-id="5d589-109">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: "<span data-ttu-id=\"5d589-110\">Uruchom poniższy kod w oknie interaktywnym.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"5d589-111\">W tym celu wpisz następujący blok kodu w oknie interaktywnym (Zastąp \"\\<name >\" nazwą) i kliknij przycisk **Uruchom** przycisk:</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-111\">To do that, type the following code block in the interactive window (replace \"\\<name>\" with your name) and click the **Run** button:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"5d589-112\">Po uruchomieniu program wyświetla jeden ciąg zawierający nazwę w pozdrowienie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-112\">When you run the program, it displays a single string that includes your name in the greeting.</span></span> <span data-ttu-id=\"5d589-113\">Ciąg zawarty w <xref:System.Console.WriteLine%2A> jest wywołanie metody *interpolowane ciąg*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-113\">The string included in the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"5d589-114\">Jest to rodzaj szablonu, który pozwala utworzyć jeden ciąg (o nazwie *powoduje ciąg*) z ciągu, który zawiera osadzony kod.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-114\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"5d589-115\">Ciągi interpolowane są szczególnie użyteczne w przypadku wstawiania wartości w ciągu lub ciągi łączenie (łączenie).</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-115\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) strings.</span></span> \n\n<span data-ttu-id=\"5d589-116\">Ten prosty przykład zawiera dwa elementy, które muszą mieć co ciągu interpolowanym:</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-116\">This simple example contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"5d589-117\">Literał ciągu rozpoczynający się od `$` znak przed jego otwierania przez cudzysłów znaków.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-117\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"5d589-118\">Nie może być odstępów między `$` symboli i znaku cudzysłowu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-118\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"5d589-119\">(Jeśli chcesz zobaczyć co się stanie w przypadku obejmują jeden, Wstaw spację po `$` znak w oknie interaktywnym, a następnie kliknij przycisk **Uruchom** przycisku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-119\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and click the **Run** button.</span></span> <span data-ttu-id=\"5d589-120\">Kompilator języka C# narzeka, \"Nieoczekiwany znak\"$\"\".)</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-120\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"5d589-121\">Co najmniej jeden *interpolowane wyrażenia*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-121\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"5d589-122\">Wskazuje wyrażenie interpolowane otwierający i zamykający nawias klamrowy (`{` i `}`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-122\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"5d589-123\">Możesz też zaznaczyć dowolne C# wyrażenie zwracające wartość (w tym `null`) w nawiasach klamrowych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-123\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"5d589-124\">Poniżej przedstawiono kilka przykładów z ciągu więcej interpolowane z innych typów danych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-124\">Let's try a few more interpolated string examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"5d589-125\">Jest to środowisko programowania online w wersji zapoznawczej.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-125\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"5d589-126\">Jeśli wystąpią problemy, zgłoś je [w repozytorium dotnet/spróbuj](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-126\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="5d589-127">Obejmują różne typy danych</span><span class="sxs-lookup"><span data-stu-id="5d589-127">Include different data types</span></span>
  durationInMinutes: 3
  content: "<span data-ttu-id=\"5d589-128\">W poprzedniej procedury szybkiego startu ciągu interpolowanym jest używany do wstawiania jeden ciąg wewnątrz innego.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-128\">In the previous quickstart, you used an interpolated string to insert one string inside of another.</span></span> <span data-ttu-id=\"5d589-129\">Wyrażenie ciągu interpolowanym mogą być dowolnego typu danych, mimo że.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-129\">An interpolated string expression can be any data type, though.</span></span> <span data-ttu-id=\"5d589-130\">Spróbujmy ciągu interpolowanym zawierającego wartości wiele typów danych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-130\">Let's try an interpolated string that has values of multiple data types.</span></span> \n\n<span data-ttu-id=\"5d589-131\">Poniższy przykład zawiera interpolowanego wyrażenia z `Vegetable` obiektu, jest członkiem `Unit` wyliczenia, <xref:System.DateTime> wartości, a <xref:System.Decimal> wartość.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-131\">The following example includes interpolated expressions with a `Vegetable` object, a member of the `Unit` enumeration, a <xref:System.DateTime> value, and a <xref:System.Decimal> value.</span></span> <span data-ttu-id=\"5d589-132\">Uruchom go w oknie interaktywnym.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-132\">Run it in the interactive window.</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic class Example\n{\n   public enum Unit { item, pound, ounce, dozen };\n\n   public static void Main()\n   {\n      var item = new Vegetable(\"eggplant\");\n      var date = DateTime.Now;\n      var price = 1.99m;\n      var unit = Unit.item;\n      Console.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n   }\n}\n```\n\n<span data-ttu-id=\"5d589-133\">Zwróć uwagę na jedno z wyrażeń interpolowane zawiera `item` obiektów w ciągu wynik, który jest wyświetlany w konsoli, a w tym przypadku ciągu \"oberżynowego\" jest umieszczona w ciągu wynik.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-133\">Note that one of the interpolated expressions includes the `item` object in the result string that's displayed to the console, and in this case the string \"eggplant\" is inserted into the result string.</span></span> <span data-ttu-id=\"5d589-134\">To znaczy, ponieważ typ interpolowanego wyrażenia nie jest ciągiem, kompilator języka C# wykonuje następujące czynności:</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-134\">That's because, when the type of an interpolated expression is not a string, the C# compiler does the following:</span></span>\n\n- <span data-ttu-id=\"5d589-135\">Jeśli jest interpolowanego wyrażenia `null`, interpolowane wyrażenie zwraca ciąg pusty (\"\", lub <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-135\">If the interpolated expression is `null`, the interpolated expression returns an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>\n\n- <span data-ttu-id=\"5d589-136\">Jeśli interpolowanego wyrażenia nie jest `null`, `ToString` wywoływana jest metoda typu interpolowanego wyrażenia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-136\">If the interpolated expression is not `null`, the `ToString` method of the type of the interpolated expression is called.</span></span> <span data-ttu-id=\"5d589-137\">Można to sprawdzić przez komentowania limit definicji `Vegetable.ToString` metody w tym przykładzie, umieszczając symbol komentarza (`//`) przed nim.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-137\">You can test this by commenting out the definition of the `Vegetable.ToString` method in the example by putting a comment symbol (`//`) in front of it.</span></span> <span data-ttu-id=\"5d589-138\">W danych wyjściowych, ciąg \"oberżynowego\" zostanie zastąpiony w pełni kwalifikowaną nazwę typu (przestrzeń nazw zdefiniowana przez REPL C#, wraz z nazwą typu), który jest domyślnym zachowaniem z <xref:System.Object.ToString?displayProperty=nameWithType> metody.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-138\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span>   \n\n<span data-ttu-id=\"5d589-139\">W danych wyjściowych w tym przykładzie Data jest zbyt precyzyjna (cena oberżynowego nie różnią się zależnie od drugiego), a wartość ceny nie oznacza jednostkę waluty.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-139\">In the output from this example, the date is too precise (the price of eggplant does not vary by the second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"5d589-140\">W następnym kroku dowiesz się, jak rozwiązać te problemy kontrolując format ciągów zwrócony przez interpolowanego wyrażenia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-140\">In the next step, you'll learn how to fix those issues by controlling the format of strings returned by interpolated expressions.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"5d589-141\">Jest to środowisko programowania online w wersji zapoznawczej.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-141\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"5d589-142\">Jeśli wystąpią problemy, zgłoś je [w repozytorium dotnet/spróbuj](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-142\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="5d589-143">Formant formatowanie interpolowanego wyrażenia</span><span class="sxs-lookup"><span data-stu-id="5d589-143">Control the formatting of interpolated expressions</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="5d589-144">W poprzedniej lekcji nieprawidłowo sformatowany dwa ciągi, które zostały wstawione do ciąg wyniku.</span><span class="sxs-lookup"><span data-stu-id="5d589-144">In the previous lesson, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id="5d589-145">Jeden jest wartość daty i godziny, dla którego został właściwe tylko data.</span><span class="sxs-lookup"><span data-stu-id="5d589-145">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id="5d589-146">Drugi był cen, który nie poinformował jego jednostkę waluty.</span><span class="sxs-lookup"><span data-stu-id="5d589-146">The second was a price that did not indicate its unit of currency.</span></span> <span data-ttu-id="5d589-147">Problemy z obu łatwych do adresu.</span><span class="sxs-lookup"><span data-stu-id="5d589-147">Both issues are easy to address.</span></span> <span data-ttu-id="5d589-148">Interpolowanego wyrażenia mogą zawierać *ciągi formatujące* umożliwiające sterowanie formatowanie poszczególnych typów.</span><span class="sxs-lookup"><span data-stu-id="5d589-148">Interpolated expressions can include *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id="5d589-149">Zmodyfikuj wywołanie `Console.WriteLine` z poprzedniego przykładu, aby uwzględnić specyfikator formatu dla pól daty i cen, jak pokazano w następującym wierszu:</span><span class="sxs-lookup"><span data-stu-id="5d589-149">Modify the call to `Console.WriteLine` from the previous example to include the format specifier for the date and price fields as shown in the following line:</span></span>


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item} was {price:C2} per {unit}.");

    ```


    <span data-ttu-id="5d589-150">Podaj ciąg formatu, używając interpolowanego wyrażenia dwukropek i ciąg formatu.</span><span class="sxs-lookup"><span data-stu-id="5d589-150">You specify a format string by following the interpolated expression with a colon and the format string.</span></span> <span data-ttu-id="5d589-151">"d" jest [standardowa Data i godzina ciąg formatu](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) reprezentujący format daty krótkiej.</span><span class="sxs-lookup"><span data-stu-id="5d589-151">"d" is a [standard date and time format string](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id="5d589-152">"C2" jest [ciągu standardowego formatu liczbowego](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) reprezentujący liczbę jako wartość walutową z dwóch cyfr po punkcie dziesiętnym.</span><span class="sxs-lookup"><span data-stu-id="5d589-152">"C2" is a  [standard numeric format string](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>


    <span data-ttu-id="5d589-153">Liczba typów w bibliotek .NET Standard obsługuje zestaw wstępnie zdefiniowanych ciągi formatów.</span><span class="sxs-lookup"><span data-stu-id="5d589-153">A number of types in the .NET Standard libraries support a predefined set of format strings.</span></span> <span data-ttu-id="5d589-154">Obejmuje to wszystkie typy liczbowe oraz typy daty i godziny.</span><span class="sxs-lookup"><span data-stu-id="5d589-154">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id="5d589-155">Pełną listę typów, które obsługują ciągi formatów, zobacz [ciągi formatów i typy biblioteki klas .NET](../../standard/base-types/formatting-types.md#stringRef) w [typy formatowania w .NET](../../standard/base-types/formatting-types.md) artykułu.</span><span class="sxs-lookup"><span data-stu-id="5d589-155">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span> <span data-ttu-id="5d589-156">Dowolny typ może obsługiwać zestaw ciągi formatów i można również tworzyć niestandardowych rozszerzeń formatowania, które zapewniają niestandardowe formatowanie dla istniejących typów.</span><span class="sxs-lookup"><span data-stu-id="5d589-156">Any type can support a set of format strings, and you can also develop custom formatting extensions that provide custom formatting for existing types.</span></span> <span data-ttu-id="5d589-157">Aby uzyskać informacje dotyczące formatowania niestandardowego, zapewniając <xref:System.ICustomFormatter> wdrażania, zobacz [niestandardowe formatowanie ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) w [typy formatowania w .NET](../../standard/base-types/formatting-types.md) artykułu.</span><span class="sxs-lookup"><span data-stu-id="5d589-157">For information on custom formatting by providing an <xref:System.ICustomFormatter> implementation, see [Custom Formatting with ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span>


    <span data-ttu-id="5d589-158">Spróbuj zmodyfikować ciągów formatu w **Edytor .NET** aby zobaczyć, jak wpływają one na format daty i godziny oraz wartość liczbową.</span><span class="sxs-lookup"><span data-stu-id="5d589-158">Try modifying the format strings in the **.NET Editor** to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id="5d589-159">Zmiana "d" `{date:d}` "t" (do wyświetlania na format godziny krótkiej), "y" (Aby wyświetlić rok i miesiąc), a "yyyy" (do wyświetlania roku w postaci czterech cyfr).</span><span class="sxs-lookup"><span data-stu-id="5d589-159">Change the "d" in `{date:d}` to "t" (to display the short time format), "y" (to display the year and month), and "yyyy" (to display the year as a four-digit number).</span></span> <span data-ttu-id="5d589-160">Zmiana "C2" `{price:C2}` "e" (w notacji wykładniczej) i "F3" (dla wartość liczbową z trzech cyfr po punkcie dziesiętnym).</span><span class="sxs-lookup"><span data-stu-id="5d589-160">Change the "C2" in `{price:C2}` to "e" (for exponential notation) and "F3" (for a numeric value with three digits after the decimal point).</span></span>


    <span data-ttu-id="5d589-161">Oprócz kontrolowanie formatowania, można też kontrolować pola szerokości i wyrównania ciągów zwrócony przez interpolowanego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="5d589-161">In addition to controlling formatting, you can also control the field width and alignment of the strings returned by an interpolated expression.</span></span> <span data-ttu-id="5d589-162">W następnym kroku dowiesz się, jak to zrobić.</span><span class="sxs-lookup"><span data-stu-id="5d589-162">In the next step, you'll learn how to do this.</span></span>


    > [!NOTE]

    > <span data-ttu-id="5d589-163">Jest to środowisko programowania online w wersji zapoznawczej.</span><span class="sxs-lookup"><span data-stu-id="5d589-163">This online coding experience is in preview mode.</span></span> <span data-ttu-id="5d589-164">Jeśli wystąpią problemy, zgłoś je [w repozytorium dotnet/spróbuj](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="5d589-164">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="5d589-165">Szerokość pola i wyrównanie interpolowanego wyrażenia</span><span class="sxs-lookup"><span data-stu-id="5d589-165">Control the field width and alignment of interpolated expressions</span></span>
  durationInMinutes: 6
  content: "<span data-ttu-id=\"5d589-166\">Zwykle gdy długość ciągu zwróconego przez wyrażenie interpolowane znajduje się w ciągu wynik, ma bez spacji wiodących lub końcowych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-166\">Ordinarily, when the string returned by an interpolated expression is included in a result string, it has no leading or trailing spaces.</span></span> <span data-ttu-id=\"5d589-167\">Szczególnie w przypadku wystąpienia, w których użytkownik pracuje z zestawu danych, interpolowanego wyrażenia pozwalają określić szerokość pola i jego wyrównania.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-167\">Particularly for instances in which you are working with a set of data, interpolated expressions let you specify a field width and its alignment.</span></span> <span data-ttu-id=\"5d589-168\">Aby to sprawdzić, uruchom następujący kod.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-168\">To see this, run the following code.</span></span>\n\n```csharp\n  var inventory = new Dictionary<string, int>();\n  inventory.Add(\"hammer, ball pein\", 18);\n  inventory.Add(\"hammer, cross pein\", 5);\n  inventory.Add(\"screwdriver, Phillips #2\", 14);\n\n  Console.WriteLine($\"Inventory on {DateTime.Now:d}\");\n  Console.WriteLine(\" \");\n  Console.WriteLine($\"{\"Item\",-25}    {\"Quantity\",10}\");\n  Console.WriteLine(\" \"); \n  foreach (var item in inventory)\n     Console.WriteLine($\"{item.Key,-25}     {item.Value,10}\");\n```\n\n<span data-ttu-id=\"5d589-169\">Nazwy elementów są wyrównane do lewej, a ich ilości są wyrównane do lewej.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-169\">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id=\"5d589-170\">Określ wyrównanie przez dodanie przecinka (\",\") po wyrażeniu i wyznaczające szerokości pola.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-170\">You specify the alignment by adding a comma (\",\") after the expression and designating the field width.</span></span> <span data-ttu-id=\"5d589-171\">Jeśli szerokość pola jest dodatnia, pole jest wyrównany do prawej:</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-171\">If the field width is a positive number, the field is right-aligned:</span></span>\n\n```text\n{expression, width}\n```\n\n<span data-ttu-id=\"5d589-172\">Jeśli szerokość pola jest liczbą ujemną, pole jest wyrównane do lewej:</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-172\">If the field width is a negative number, the field is left-aligned:</span></span>\n\n```text\n{expression, -width}\n```\n<span data-ttu-id=\"5d589-173\">Spróbuj usunąć ujemna znaki z `{\"Item\",-25}` i `{item.Key,-25}` interpolowane wyrażeń i ponownie uruchomić przykład.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-173\">Try removing the negative signs from the `{\"Item\",-25}` and `{item.Key,-25}` interpolated expressions and run the example again.</span></span> <span data-ttu-id=\"5d589-174\">Teraz, nazwa elementu jest wyrównany do prawej.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-174\">This time, the item name is right-aligned.</span></span>\n\n<span data-ttu-id=\"5d589-175\">Szerokość pola i ciąg formatu w jednym wyrażeniu interpolowane można łączyć.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-175\">You can combine a field width and a format string in a single interpolated expression.</span></span> <span data-ttu-id=\"5d589-176\">Szerokość pola zostanie osiągnięty jako pierwszy, następuje dwukropek i ciąg formatu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-176\">The field width comes first, followed by a colon and the format string.</span></span> <span data-ttu-id=\"5d589-177\">Spróbuj następujących prosty program, który wyświetla trzy ciągi sformatowane o szerokości zdefiniowanych pól.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-177\">Try the following simple program that displays three formatted strings with defined field widths.</span></span>\n\n```csharp\nConsole.WriteLine($\"{DateTime.Now,-20:d} Hour {DateTime.Now,-10:HH} {1063.342,15:N2} feet\");\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"5d589-178\">Jest to środowisko programowania online w wersji zapoznawczej.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-178\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"5d589-179\">Jeśli wystąpią problemy, zgłoś je [w repozytorium dotnet/spróbuj](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-179\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"5d589-180\">Zakończono ciągi interpolowane — Szybki Start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-180\">You've completed the interpolated strings quickstart.</span></span> \n\n<span data-ttu-id=\"5d589-181\">Te przewodniki Szybki Start można kontynuować na środowiska deweloperskiego lokalnego.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-181\">You can continue these quickstarts on your own local development environment.</span></span> <span data-ttu-id=\"5d589-182\">Poznaj podstawy z [lokalne działania projektowe](local-environment.md) , a następnie wybierz Szybki Start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-182\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"5d589-183\">Możesz spróbować tego samego wykonywania, bezpośrednie przejście do następnej procedury szybkiego startu lub uruchom ponownie z [numery w języku C#](numbers-in-csharp-local.md) Szybki Start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-183\">You can try this same exercise, move directly to the next quickstart, or start again with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"5d589-184\">Dowiedz się więcej o ciągi interpolowane w [ciągu interpolacji](../language-reference/tokens/interpolated.md) tematu w odwołanie w C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5d589-184\">You can learn more about interpolated strings in the [String interpolation](../language-reference/tokens/interpolated.md) topic in the C# Reference.</span></span>"
