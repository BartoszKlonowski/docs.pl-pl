### YamlMime:Tutorial
title: <span data-ttu-id="1583a-101">Gałęzie i pętle</span><span class="sxs-lookup"><span data-stu-id="1583a-101">Branches and loops</span></span>
metadata:
  title: Gałęzie i pętle interaktywny samouczek dotyczący — Przewodniki Szybki Start języka C#
  description: W tym przewodniku Szybki Start omawiającym gałęzie i pętle użyjesz przeglądarki, aby interaktywnie poznawać język C#. Będziesz pisać kod w języku C# i wyświetlić wyniki kompilacji i uruchomienia kodu bezpośrednio w przeglądarce.
  audience: Developer
  level: Beginner
  ms.topic: quickstart
  ms.custom: mvc
  ms.date: 08/24/2018
  displayType: two-column
  interactive: csharp
  nextTutorialHref: interpolated-strings.yml
  nextTutorialTitle: <span data-ttu-id="1583a-105">Interpolacja ciągów w języku C#</span><span class="sxs-lookup"><span data-stu-id="1583a-105">String interpolation in C#</span></span>
  ms.openlocfilehash: d214fe9a2b2e7c634c79fa7aac96136a77415e09
  ms.sourcegitcommit: 2eceb05f1a5bb261291a1f6a91c5153727ac1c19
  ms.translationtype: MT
  ms.contentlocale: pl-PL
  ms.lasthandoff: 09/04/2018
  ms.locfileid: "43506715"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="1583a-106">Ten przewodnik Szybki Start omawia sposób pisanie kodu badającego zmienne i wybierającego ścieżkę wykonania na podstawie tych zmiennych.</span><span class="sxs-lookup"><span data-stu-id="1583a-106">This quickstart teaches you how to write code that examines variables and changes execution path based on those variables.</span></span> <span data-ttu-id="1583a-107">Użyjesz przeglądarki do pisania C# interaktywnie i wyświetlić wyniki kompilacji i uruchomienia kodu.</span><span class="sxs-lookup"><span data-stu-id="1583a-107">You'll use your browser to write C# interactively and see the results of compiling and running your code.</span></span> <span data-ttu-id="1583a-108">Ten przewodnik Szybki Start zawiera serię lekcji przedstawiających konstrukcje w języku C# gałęzi i pętli.</span><span class="sxs-lookup"><span data-stu-id="1583a-108">This quickstart contains a series of lessons that explore branching and looping constructs in C#.</span></span> <span data-ttu-id="1583a-109">Te lekcje umożliwiają poznanie podstaw języka C#.</span><span class="sxs-lookup"><span data-stu-id="1583a-109">These lessons teach you the fundamentals of the C# language.</span></span>
- title: <span data-ttu-id="1583a-110">Podejmowanie decyzji za pomocą if — instrukcja</span><span class="sxs-lookup"><span data-stu-id="1583a-110">Make decisions using the if statement</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"1583a-111\">Uruchom następujący kod w oknie interaktywnym.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"1583a-112\">Aby to zrobić, wpisz poniższy blok kodu w oknie interaktywnym, a następnie kliknij przycisk **Uruchom** przycisku:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 5;\nint b = 6;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10.\");\n```\n\n<span data-ttu-id=\"1583a-113\">Zmodyfikuj deklarację zmiennej `b` , tak aby suma była mniejsza niż 10:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-113\">Modify the declaration of `b` so that the sum is less than 10:</span></span> \n\n```csharp\nint b = 3;\n```\n\n<span data-ttu-id=\"1583a-114\">Kliknij przycisk **Uruchom** ponownie przycisk.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-114\">Click the **Run** button again.</span></span> <span data-ttu-id=\"1583a-115\">Ponieważ odpowiedź jest mniejsza niż 10, nic nie zostanie wyświetlone.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-115\">Because the answer is less than 10, nothing is printed.</span></span> <span data-ttu-id=\"1583a-116\">**Warunek** jesteś testowania ma wartość false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-116\">The **condition** you're testing is false.</span></span> <span data-ttu-id=\"1583a-117\">Nie masz żadnego kodu do wykonania, ponieważ zostały zapisane wyłącznie jedną z możliwych gałęzi dla `if` instrukcji: gałęzi dla wartości true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-117\">You don't have any code to execute because you've only written one of the possible branches for an `if` statement: the true branch.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"1583a-118\">Gdy eksplorujesz C# (lub dowolnego języka programowania), będziesz robić błędy podczas pisania kodu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-118\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"1583a-119\">**Kompilatora** znajdzie te błędy i zgłosi je.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-119\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"1583a-120\">Gdy dane wyjściowe zawierają komunikaty o błędach, Przyjrzyj się uważnie przykładowy kod i kod w oknie interaktywnym, aby zobaczyć, jak naprawić.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-120\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"1583a-121\">To ćwiczenie pomoże Ci poznać strukturę kodu C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-121\">That exercise will help you learn the structure of C# code.</span></span>     \n\n<span data-ttu-id=\"1583a-122\">Pierwszy przykład przedstawia możliwości `if` i typów logicznych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-122\">This first sample shows the power of `if` and boolean types.</span></span> <span data-ttu-id=\"1583a-123\">A *logiczna* jest zmienną, która może mieć jedną z dwóch wartości: `true` lub `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-123\">A *boolean* is a variable that can have one of two values: `true` or `false`.</span></span> <span data-ttu-id=\"1583a-124\">Język C# definiuje specjalny typ `bool` dla zmiennych logicznych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-124\">C# defines a special type, `bool` for boolean variables.</span></span> <span data-ttu-id=\"1583a-125\">`if` Instrukcji sprawdza wartość `bool`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-125\">The `if` statement checks the value of a `bool`.</span></span> <span data-ttu-id=\"1583a-126\">Jeśli wartość to `true`, instrukcji następującej `if` wykonuje.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-126\">When the value is `true`, the statement following the `if` executes.</span></span> <span data-ttu-id=\"1583a-127\">W przeciwnym razie zostanie ona pominięta.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-127\">Otherwise, it is skipped.</span></span> \n\n<span data-ttu-id=\"1583a-128\">Ten proces sprawdzania warunków i wykonywania instrukcji na podstawie tych warunków są ogromne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-128\">This process of checking conditions and executing statements based on those conditions is very powerful.</span></span> <span data-ttu-id=\"1583a-129\">Dowiedzmy się więcej.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-129\">Let's explore more.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"1583a-130\">To środowisko kodowania online jest w trybie podglądu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-130\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1583a-131\">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-131\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1583a-132">Upewnij się, jeśli i inne współpracują ze sobą</span><span class="sxs-lookup"><span data-stu-id="1583a-132">Make if and else work together</span></span>
  durationInMinutes: 10
  content: "\n<span data-ttu-id=\"1583a-133\">Aby wykonać różny kod w gałęzie true i false, należy utworzyć `else` gałęzi, która wykonuje, gdy warunek jest fałszywy.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-133\">To execute different code in both the true and false branches, you create an `else` branch that executes when the condition is false.</span></span> <span data-ttu-id=\"1583a-134\">Wypróbuj:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-134\">Try this:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10\");\nelse\n    Console.WriteLine(\"The answer is not greater than 10\");\n```\n\n<span data-ttu-id=\"1583a-135\">Instrukcja po słowie `else` — słowo kluczowe jest wykonywany tylko wtedy, gdy testowany warunek jest `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-135\">The statement following the `else` keyword executes only when the condition being tested is `false`.</span></span> <span data-ttu-id=\"1583a-136\">Łącząc `if` i `else` atrybut typu wartość logiczna warunki zapewnia wszystkie potrzebne możliwości.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-136\">Combining `if` and `else` with boolean conditions provides all the power you need.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"1583a-137\">Wcięcia pod `if` i `else` instrukcji jest czytelności.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-137\">The indentation under the `if` and `else` statements is for human readers.</span></span>\n> <span data-ttu-id=\"1583a-138\">W języku C# nie mają wcięcia ani białe miejsca znaczenia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-138\">The C# language doesn't treat indentation or white space as significant.</span></span> <span data-ttu-id=\"1583a-139\">Instrukcja po słowie `if` lub `else` — słowo kluczowe zostanie wykonana w zależności od warunku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-139\">The statement following the `if` or `else` keyword will be executed based on the condition.</span></span> <span data-ttu-id=\"1583a-140\">Wszystkie przykłady w tym przewodniku Szybki Start, wykonaj jest stosowana powszechna praktyka wcięć odpowiadających przepływowi sterowania instrukcji.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-140\">All the samples in this quickstart follow a common practice to indent lines based on the control flow of statements.</span></span>\n\n<span data-ttu-id=\"1583a-141\">Ponieważ wcięcia nie ma znaczenia, należy użyć `{` i `}` wskazać, kiedy ma więcej niż jedna instrukcja jako część bloku wykonywanego warunkowo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-141\">Because indentation is not significant, you need to use `{` and `}` to indicate when you want more than one statement to be part of the block that executes conditionally.</span></span> <span data-ttu-id=\"1583a-142\">Programiści języka C# zazwyczaj używają nawiasów klamrowych we wszystkich `if` i `else` klauzul.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-142\">C# programmers typically use those braces on all `if` and `else` clauses.</span></span> <span data-ttu-id=\"1583a-143\">Poniższy przykład jest taki sam jak właśnie utworzony.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-143\">The following example is the same as what you just created.</span></span> <span data-ttu-id=\"1583a-144\">Wypróbuj go.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-144\">Try it.</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n}\n```\n\n> [!TIP]\n> <span data-ttu-id=\"1583a-145\">Za pomocą pozostałej części tego przewodnika Szybki Start wszystkie przykłady kodu zawierają nawiasy klamrowe, zgodnie z przyjętą.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-145\">Through the rest of this quickstart, the code samples all include the braces, following accepted practices.</span></span>\n\n<span data-ttu-id=\"1583a-146\">Możesz przetestować bardziej skomplikowanych warunków:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-146\">You can test more complicated conditions:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) && (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"And the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"Or the first number is not greater than the second\");\n}\n```\n\n<span data-ttu-id=\"1583a-147\">`&&` Reprezentuje \"i\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-147\">The `&&` represents \"and\".</span></span> <span data-ttu-id=\"1583a-148\">Oznacza to, że oba warunki muszą być spełnione, aby wykonać tę instrukcję w gałęzi dla wartości true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-148\">It means both conditions must be true to execute the statement in the true branch.</span></span>  <span data-ttu-id=\"1583a-149\">Te przykłady przedstawiają także, może mieć wielu instrukcji w każdej gałęzi warunkowej, pod warunkiem, należy ująć je w `{` i `}`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-149\">These examples also show that you can have multiple statements in each conditional branch, provided you enclose them in `{` and `}`.</span></span>\n\n<span data-ttu-id=\"1583a-150\">Można również użyć `||` do reprezentowania \"lub\":</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-150\">You can also use  `||` to represent \"or\":</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) || (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"Or the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"And the first number is not greater than the second\");\n}\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"1583a-151\">To środowisko kodowania online jest w trybie podglądu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1583a-152\">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1583a-153">Użycie pętli do powtarzania operacji</span><span class="sxs-lookup"><span data-stu-id="1583a-153">Use loops to repeat operations</span></span>
  durationInMinutes: 6
  content: "<span data-ttu-id=\"1583a-154\">Innym pojęciem ważnym dla tworzenia większych programów są **pętli**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-154\">Another important concept to create larger programs is **loops**.</span></span> <span data-ttu-id=\"1583a-155\">Pętle służą do powtarzania instrukcji, które chcesz wykonać więcej niż jeden raz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-155\">You'll use loops to repeat statements that you want executed more than once.</span></span> <span data-ttu-id=\"1583a-156\">Wypróbuj ten kod w oknie interaktywnym:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-156\">Try this code in the interactive window:</span></span>\n\n```csharp\nint counter = 0;\nwhile (counter < 10)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n}\n```\n\n<span data-ttu-id=\"1583a-157\">`while` Instrukcji sprawdza warunek i wykonuje instrukcję po `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-157\">The `while` statement checks a condition and executes the statement following the `while`.</span></span> <span data-ttu-id=\"1583a-158\">Będzie powtarzane sprawdzanie warunku i wykonywanie instrukcji, dopóki warunek jest fałszywy.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-158\">It will repeat checking the condition and executing those statements until the condition is false.</span></span>\n\n<span data-ttu-id=\"1583a-159\">W tym przykładzie jest jeszcze jeden nowy operator.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-159\">There's one other new operator in this example.</span></span> <span data-ttu-id=\"1583a-160\">`++` Po `counter` zmienna jest **przyrostu** operatora.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-160\">The `++` after the `counter` variable is the **increment** operator.</span></span> <span data-ttu-id=\"1583a-161\">Dodaje 1 do wartości counter i zapisuje wynikową wartość w zmiennej counter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-161\">It adds 1 to the value of counter, and stores that value in the counter variable.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"1583a-162\">Upewnij się, że `while` zapętlenie przyjmie wartość false podczas wykonywania kodu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-162\">Make sure that the `while` loop condition does switch to false as you execute the code.</span></span> <span data-ttu-id=\"1583a-163\">W przeciwnym razie utwórz **Pętla nieskończona** gdzie programu nigdy się nie skończy.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-163\">Otherwise, you create an **infinite loop** where your program never ends.</span></span> <span data-ttu-id=\"1583a-164\">Nie pokażemy, ponieważ aparat uruchamiający kod będzie limit czasu, aby zobaczyć żadne dane wyjściowe z programu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-164\">Let's not demonstrate that, because the engine that runs your code will time out and you'll see no output from your program.</span></span>\n\n<span data-ttu-id=\"1583a-165\">`while` Pętli testuje warunek przed wykonaniem kodu po `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-165\">The `while` loop tests the condition before executing the code following the `while`.</span></span> <span data-ttu-id=\"1583a-166\">`do` ... `while` pętli najpierw wykonuje kod, a następnie sprawdza warunek.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-166\">The `do` ... `while` loop executes the code first, and then checks the condition.</span></span> <span data-ttu-id=\"1583a-167\">Wygląda ono następująco:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-167\">It looks like this:</span></span>\n\n```csharp\nint counter = 0;\ndo\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n} while (counter < 10);\n```\n\n<span data-ttu-id=\"1583a-168\">To `do` pętli i wcześniej `while` pętli działać tak samo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-168\">This `do` loop and the earlier `while` loop work the same.</span></span> \n\n<span data-ttu-id=\"1583a-169\">Przyjrzyjmy się ostatniej instrukcji pętli.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-169\">Let's move on to one last loop statement.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"1583a-170\">To środowisko kodowania online jest w trybie podglądu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1583a-171\">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1583a-172">Praca z pętli for</span><span class="sxs-lookup"><span data-stu-id="1583a-172">Work with the for loop</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"1583a-173\">Jest innym wspólnej instrukcji pętli, który znajduje się w kodzie języka C# `for` pętli.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-173\">Another common loop statement that you'll see in C# code is the `for` loop.</span></span> <span data-ttu-id=\"1583a-174\">Wypróbuj ten kod w oknie interaktywnym:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-174\">Try this code in the interactive window:</span></span>\n\n```csharp\nfor(int counter = 0; counter < 10; counter++)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n} \n```\n\n<span data-ttu-id=\"1583a-175\">To działa ten sam jako `while` pętli i `do` pętli został już użyty.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-175\">This does the same work as the `while` loop and the `do` loop you've already used.</span></span> <span data-ttu-id=\"1583a-176\">`for` Instrukcja składa się z trzech części, które sterują jej pracą.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-176\">The `for` statement has three parts that control how it works.</span></span> \n\n<span data-ttu-id=\"1583a-177\">Pierwsza część to **dla inicjatora**: `for counter = 0;` oświadcza, że `counter` jako zmienną pętli i ustawia jej wartość początkową `0`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-177\">The first part is the **for initializer**: `for counter = 0;` declares that `counter` is the loop variable, and sets its initial value to `0`.</span></span>\n\n<span data-ttu-id=\"1583a-178\">Środkowa część to **warunku**: `counter < 10` oświadcza, że `for` pętli kontynuuje wykonywanie dopóki wartość licznika jest mniejsza niż 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-178\">The middle part is the **for condition**: `counter < 10` declares that this `for` loop continues to execute as long as the value of counter is less than 10.</span></span>\n\n<span data-ttu-id=\"1583a-179\">Ostatnia część to **dla iteratora**: `counter++` określa sposób modyfikowana zmienna pętli po wykonaniu bloku występującego `for` instrukcji.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-179\">The final part is the **for iterator**: `counter++` specifies how to modify the loop variable after executing the block following the `for` statement.</span></span> <span data-ttu-id=\"1583a-180\">Określa ona, że w tym miejscu `counter` należy zwiększyć o 1 po każdym wykonaniu bloku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-180\">Here, it specifies that `counter` should be incremented by 1 each time the block executes.</span></span>\n\n<span data-ttu-id=\"1583a-181\">Wypróbuj te samodzielnie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-181\">Experiment with these yourself.</span></span> <span data-ttu-id=\"1583a-182\">Wypróbuj następujące czynniki:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-182\">Try each of the following:</span></span>\n\n- <span data-ttu-id=\"1583a-183\">Zmień inicjator, tak aby można było uruchomić na inną wartość.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-183\">Change the initializer to start at a different value.</span></span>\n- <span data-ttu-id=\"1583a-184\">Zmień warunek, którego chcesz zatrzymać miał inną wartość.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-184\">Change the condition to stop at a different value.</span></span>\n\n<span data-ttu-id=\"1583a-185\">Gdy skończysz, przejdziemy pisania kodu, co wykorzystasz zdobyte umiejętności do samodzielnego.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-185\">When you're done, let's move on to write some code yourself to use what you've learned.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"1583a-186\">To środowisko kodowania online jest w trybie podglądu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-186\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1583a-187\">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-187\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1583a-188">Łączenie gałęzi i pętli</span><span class="sxs-lookup"><span data-stu-id="1583a-188">Combine branches and loops</span></span>
  durationInMinutes: 12
  content: >
    <span data-ttu-id="1583a-189">Teraz, gdy wiesz `if` instrukcji i konstrukcje pętli w języku C#, zobacz, jeśli można napisać kod C# obliczający sumę wszystkich liczb całkowitych od 1 do 20 podzielnych przez 3.</span><span class="sxs-lookup"><span data-stu-id="1583a-189">Now that you've seen the `if` statement and the looping constructs in the C# language, see if you can write C# code to find the sum of all integers 1 through 20 that are divisible by 3.</span></span>  <span data-ttu-id="1583a-190">Poniżej przedstawiono kilka wskazówek:</span><span class="sxs-lookup"><span data-stu-id="1583a-190">Here are a few hints:</span></span>


    - <span data-ttu-id="1583a-191">`%` Operator umożliwia obliczenie reszty z operacji dzielenia.</span><span class="sxs-lookup"><span data-stu-id="1583a-191">The `%` operator gives you the remainder of a division operation.</span></span>

    - <span data-ttu-id="1583a-192">`if` Instrukcji zapewnia warunku określającego, jeśli liczba powinna być częścią sumy.</span><span class="sxs-lookup"><span data-stu-id="1583a-192">The `if` statement gives you the condition to see if a number should be part of the sum.</span></span>

    - <span data-ttu-id="1583a-193">`for` Pętli ułatwia powtórzenie serii kroków dla wszystkich liczb od 1 do 20.</span><span class="sxs-lookup"><span data-stu-id="1583a-193">The `for` loop can help you repeat a series of steps for all the numbers 1 through 20.</span></span>


    <span data-ttu-id="1583a-194">Wypróbuj ją samodzielnie.</span><span class="sxs-lookup"><span data-stu-id="1583a-194">Try it yourself.</span></span> <span data-ttu-id="1583a-195">Sprawdź, jak Ci poszło.</span><span class="sxs-lookup"><span data-stu-id="1583a-195">Then check how you did.</span></span> <span data-ttu-id="1583a-196">Jako wskazówka odpowiedź powinna wynosić 63.</span><span class="sxs-lookup"><span data-stu-id="1583a-196">As a hint, you should get 63 for an answer.</span></span>


    > [!NOTE]

    > <span data-ttu-id="1583a-197">To środowisko kodowania online jest w trybie podglądu.</span><span class="sxs-lookup"><span data-stu-id="1583a-197">This online coding experience is in preview mode.</span></span> <span data-ttu-id="1583a-198">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="1583a-198">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="1583a-199">Ukończenie wyzwania</span><span class="sxs-lookup"><span data-stu-id="1583a-199">Complete challenge</span></span>
  durationInMinutes: 1
  content: >
    <span data-ttu-id="1583a-200">Czy Twój pomysł był podobny do poniższego?</span><span class="sxs-lookup"><span data-stu-id="1583a-200">Did you come up with something like this?</span></span>


    ```csharp

    int sum = 0;

    for (int number = 1; number < 21; number++)

    {
      if (number % 3 == 0)
      {
        sum = sum + number;
      }
    }

    Console.WriteLine($"The sum is {sum}");

    ```


    > [!NOTE]

    > <span data-ttu-id="1583a-201">To środowisko kodowania online jest w trybie podglądu.</span><span class="sxs-lookup"><span data-stu-id="1583a-201">This online coding experience is in preview mode.</span></span> <span data-ttu-id="1583a-202">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="1583a-202">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="1583a-203">Gratulacje!</span><span class="sxs-lookup"><span data-stu-id="1583a-203">Congratulations!</span></span>
  content: "<span data-ttu-id=\"1583a-204\">Ukończono Przewodnik Szybki Start \"gałęzi i pętli\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-204\">You've completed the \"branches and loops\" quickstart.</span></span> \n\n<span data-ttu-id=\"1583a-205\">Te przewodniki Szybki Start możesz kontynuować we własnym środowisku programowania.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-205\">You can continue these quickstarts on your own development environment.</span></span> <span data-ttu-id=\"1583a-206\">Poznaj podstawy [rozwoju lokalnego](local-environment.md) a następnie wybierz Przewodnik Szybki Start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-206\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"1583a-207\">Możesz wypróbować to samo ćwiczenie, przejść bezpośrednio do kolejnego przewodnika Szybki Start lub zacząć ponownie z [liczb w języku C#](numbers-in-csharp-local.md) Szybki Start.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-207\">You can try this same exercise, move directly to the next quickstart, or start again at with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"1583a-208\">Możesz dowiedzieć się więcej na temat tych pojęć w następujących tematach:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-208\">You can learn more about these concepts in these topics:</span></span>\n\n<span data-ttu-id=\"1583a-209\">[Jeśli i else, instrukcja](../language-reference/keywords/if-else.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-209\">[If and else statement](../language-reference/keywords/if-else.md) </span></span>  \n<span data-ttu-id=\"1583a-210\">[while — instrukcja](../language-reference/keywords/while.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-210\">[While statement](../language-reference/keywords/while.md) </span></span>  \n<span data-ttu-id=\"1583a-211\">[— Instrukcja](../language-reference/keywords/do.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-211\">[Do statement](../language-reference/keywords/do.md) </span></span>  \n[<span data-ttu-id=\"1583a-212\">For — instrukcja</span><span class=\"sxs-lookup\"><span data-stu-id=\"1583a-212\">For statement</span></span>](../language-reference/keywords/for.md)"
