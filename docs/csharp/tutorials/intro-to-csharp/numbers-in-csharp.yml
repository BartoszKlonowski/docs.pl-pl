### YamlMime:Tutorial
title: <span data-ttu-id="45cba-101">Manipulowanie liczb całkowitych i zmiennoprzecinkowych punkt wC#</span><span class="sxs-lookup"><span data-stu-id="45cba-101">Manipulate integral and floating point numbers in C#</span></span>
metadata:
  title: Liczby w elemencie C# — wprowadzenie do C# interaktywnego samouczka
  description: W tym samouczku omawiającym typy liczbowe użyjesz przeglądarki, aby dowiedzieć się więcej C# interaktywnie. Możesz zacząć pisać kod w języku C# oraz zobaczyć wyniki kompilacji i uruchomienia kodu bezpośrednio w przeglądarce.
  audience: Developer
  ms.custom: mvc
  ms.date: 08/24/2018
  level: Beginner
  nextTutorialHref: branches-and-loops.yml
  nextTutorialTitle: <span data-ttu-id="45cba-105">Gałęzie i pętle w języku C#</span><span class="sxs-lookup"><span data-stu-id="45cba-105">Branches and loops in C#</span></span>
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: 7edc39e6b9d45a0f6707adf48199c9a096b8992d
  ms.sourcegitcommit: c93fd5139f9efcf6db514e3474301738a6d1d649
  ms.translationtype: MT
  ms.contentlocale: pl-PL
  ms.lasthandoff: 10/28/2018
  ms.locfileid: "50198598"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="45cba-106">Ten samouczek zawiera informacje na temat typów liczbowych w C# interaktywnie przy użyciu przeglądarki do zapisania C# i wyświetlić wyniki kompilacji i uruchomienia kodu.</span><span class="sxs-lookup"><span data-stu-id="45cba-106">This tutorial teaches you about the numeric types in C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="45cba-107">Zawiera on cykl lekcji dotyczących liczb i operacji matematycznych w języku C#.</span><span class="sxs-lookup"><span data-stu-id="45cba-107">It contains a series of lessons that explore numbers and math operations in C#.</span></span> <span data-ttu-id="45cba-108">Te lekcje umożliwiają poznanie podstaw języka C#.</span><span class="sxs-lookup"><span data-stu-id="45cba-108">These lessons teach you the fundamentals of the C# language.</span></span>
- title: <span data-ttu-id="45cba-109">Poznawanie matematyki całkowitoliczbowej</span><span class="sxs-lookup"><span data-stu-id="45cba-109">Explore integer math</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"45cba-110\">Uruchom następujący kod w oknie interaktywnym.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"45cba-111\">Aby to zrobić, wpisz poniższy blok kodu w oknie interaktywnym, a następnie kliknij przycisk **Uruchom** przycisku:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-111\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 18;\nint b = 6;\nint c = a + b;\nConsole.WriteLine(c);\n```\n\n<span data-ttu-id=\"45cba-112\">Po prostu przedstawiono jedną z podstawowych operacji matematycznych na liczbach całkowitych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-112\">You've just seen one of the fundamental math operations with integers.</span></span> <span data-ttu-id=\"45cba-113\">`int` Wpisz reprezentuje **całkowitą**, dodatnią lub ujemną liczbę całkowitą.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-113\">The `int` type represents an **integer**, a positive or negative whole number.</span></span> <span data-ttu-id=\"45cba-114\">Możesz użyć `+` symbol do dodania.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-114\">You use the `+` symbol for addition.</span></span> <span data-ttu-id=\"45cba-115\">Inne typowe operacje matematyczne dla liczb całkowitych obejmują:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-115\">Other common mathematical operations for integers include:</span></span>\n\n- <span data-ttu-id=\"45cba-116\">`-` odejmowanie</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-116\">`-` for subtraction</span></span>\n- <span data-ttu-id=\"45cba-117\">`*` mnożenie</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-117\">`*` for multiplication</span></span>\n- <span data-ttu-id=\"45cba-118\">`/` dzielenie</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-118\">`/` for division</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"45cba-119\">W tym samouczku interaktywne możesz eksplorować samodzielnie, modyfikując kod wpisany w oknie interaktywnym.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-119\">Throughout this interactive tutorial, you can explore on your own by modifying the code you've written in the interactive window.</span></span> <span data-ttu-id=\"45cba-120\">Ten samouczek zawiera przykłady, które można wypróbować w każdym kroku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-120\">This tutorial provides examples that you can try at each step.</span></span>\n\n<span data-ttu-id=\"45cba-121\">Rozpocznij od wypróbowania różnych operacji.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-121\">Start by exploring those different operations.</span></span> <span data-ttu-id=\"45cba-122\">Zmodyfikuj trzeci wiersz, aby użyć każdej z tych operacji.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-122\">Modify the third line to try each of these operations.</span></span> <span data-ttu-id=\"45cba-123\">Po każdej modyfikacji kliknij **Uruchom** przycisku.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-123\">After each edit, click the **Run** button.</span></span>\n\n<span data-ttu-id=\"45cba-124\">Odejmowanie:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-124\">Subtraction:</span></span>\n\n```csharp\nint c = a - b;\n```\n\n<span data-ttu-id=\"45cba-125\">Mnożenie:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-125\">Multiplication:</span></span>\n\n```csharp\nint c = a * b;\n```\n\n<span data-ttu-id=\"45cba-126\">Dział:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-126\">Division:</span></span> \n\n```csharp\nint c = a / b;\n```\n\n<span data-ttu-id=\"45cba-127\">Możesz także eksperymentować, wykonując wiele operacji matematycznych w jednym wierszu, jeśli chcesz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-127\">You can also experiment by performing multiple mathematics operations in the same line, if you'd like.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"45cba-128\">Gdy eksplorujesz C# (lub dowolnego języka programowania), będziesz robić błędy podczas pisania kodu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-128\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"45cba-129\">**Kompilatora** znajdzie te błędy i zgłosi je.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-129\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"45cba-130\">Gdy dane wyjściowe zawierają komunikaty o błędach, Przyjrzyj się uważnie przykładowy kod i kod w oknie interaktywnym, aby zobaczyć, jak naprawić.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-130\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"45cba-131\">To ćwiczenie pomoże Ci poznać strukturę kodu C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-131\">That exercise will help you learn the structure of C# code.</span></span>     \n\n> [!NOTE]\n> <span data-ttu-id=\"45cba-132\">To środowisko kodowania online jest w trybie podglądu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-132\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"45cba-133\">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-133\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="45cba-134">Poznawanie kolejności operacji</span><span class="sxs-lookup"><span data-stu-id="45cba-134">Explore order of operations</span></span>
  durationInMinutes: 7
  content: >
    <span data-ttu-id="45cba-135">W języku C# definiuje kolejność wykonywania różnych operacji matematycznych zgodnie z regułami spójnymi z regułami przedstawianymi na lekcjach matematyki.</span><span class="sxs-lookup"><span data-stu-id="45cba-135">The C# language defines the precedence of different mathematics operations with rules consistent with the rules you learned in mathematics.</span></span>

    <span data-ttu-id="45cba-136">Mnożenie i dzielenie pierwszeństwo dodawania i odejmowania.</span><span class="sxs-lookup"><span data-stu-id="45cba-136">Multiplication and division take precedence over addition and subtraction.</span></span>

    <span data-ttu-id="45cba-137">Zaobserwuj to, uruchamiając następujący kod w oknie interaktywnym:</span><span class="sxs-lookup"><span data-stu-id="45cba-137">Explore that by running the following code in the interactive window:</span></span>


    ```csharp

    int a = 5;

    int b = 4;

    int c = 2;

    int d = a + b * c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="45cba-138">Dane wyjściowe pokazuje, że mnożenie jest wykonywane przed dodawaniem.</span><span class="sxs-lookup"><span data-stu-id="45cba-138">The output demonstrates that the multiplication is performed before the addition.</span></span>


    <span data-ttu-id="45cba-139">Inną kolejność operacji można wymusić, dodając nawiasy wokół operacji lub operacji, które mają wykonane jako pierwsze:</span><span class="sxs-lookup"><span data-stu-id="45cba-139">You can force a different order of operation by adding parentheses around the operation or operations you want performed first:</span></span>


    ```csharp

    int a = 5;

    int b = 4;

    int c = 2;

    int d = (a  + b) * c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="45cba-140">Dowiedz się więcej, łącząc wiele różnych operacji.</span><span class="sxs-lookup"><span data-stu-id="45cba-140">Explore more by combining many different operations.</span></span> <span data-ttu-id="45cba-141">Zastąp czwarty wiersz powyżej podobny do poniższego:</span><span class="sxs-lookup"><span data-stu-id="45cba-141">Replace the fourth line above with something like this:</span></span>


    ```csharp

    int d = (a + b) - 6 * c + (12 * 4) / 3 + 12;

    ```


    <span data-ttu-id="45cba-142">Być może zauważono, interesujące zachowanie liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="45cba-142">You may have noticed an interesting behavior for integers.</span></span> <span data-ttu-id="45cba-143">Dzielenie całkowitoliczbowe zawsze daje wyniku liczby całkowitej, nawet wtedy, gdy oczekiwany wynik, który ma zawierać części dziesiętnej lub ułamkowej.</span><span class="sxs-lookup"><span data-stu-id="45cba-143">Integer division always produces an integer result, even when you'd expect the result to include a decimal or fractional portion.</span></span>


    <span data-ttu-id="45cba-144">Jeśli nie dostrzegasz tego zachowania, spróbuj wykonać następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="45cba-144">If you haven't seen this behavior, try the following:</span></span>


    ```csharp

    int a = 7;

    int b = 4;

    int c = 3;

    int d = (a  + b) / c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="45cba-145">Kliknij przycisk **Uruchom** ponownie, aby zobaczyć wyniki.</span><span class="sxs-lookup"><span data-stu-id="45cba-145">Click **Run** again to see the results.</span></span>


    > [!NOTE]

    > <span data-ttu-id="45cba-146">To środowisko kodowania online jest w trybie podglądu.</span><span class="sxs-lookup"><span data-stu-id="45cba-146">This online coding experience is in preview mode.</span></span> <span data-ttu-id="45cba-147">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="45cba-147">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="45cba-148">Zapoznaj się z liczbą całkowitą precyzji i limitów</span><span class="sxs-lookup"><span data-stu-id="45cba-148">Explore integer precision and limits</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="45cba-149">Ostatni przykład pokazuje, że dzielenie całkowitoliczbowe obcina wynik.</span><span class="sxs-lookup"><span data-stu-id="45cba-149">That last sample showed you that integer division truncates the result.</span></span>

    <span data-ttu-id="45cba-150">Możesz uzyskać **resztę** przy użyciu **modulo** operatora `%` znaków:</span><span class="sxs-lookup"><span data-stu-id="45cba-150">You can get the **remainder** by using the **modulo** operator, the `%` character:</span></span>


    ```csharp

    int a = 7;

    int b = 4;

    int c = 3;

    int d = (a  + b) / c;

    int e = (a + b) % c;

    Console.WriteLine($"quotient: {d}");

    Console.WriteLine($"remainder: {e}");

    ```


    <span data-ttu-id="45cba-151">Typ liczby całkowitej C# różni się od matematycznych liczb całkowitych w inny sposób: `int` typ ma limit maksimum i minimum.</span><span class="sxs-lookup"><span data-stu-id="45cba-151">The C# integer type differs from mathematical integers in one other way: the `int` type has minimum and maximum limits.</span></span> <span data-ttu-id="45cba-152">Uruchom następujący kod w oknie interaktywnym, aby zobaczyć te limity:</span><span class="sxs-lookup"><span data-stu-id="45cba-152">Run this code in the interactive window to see those limits:</span></span>


    ```csharp

    int max = int.MaxValue;

    int min = int.MinValue;

    Console.WriteLine($"The range of integers is {min} to {max}");

    ```


    <span data-ttu-id="45cba-153">Jeśli obliczenia generują wartość, która przekracza te limity, masz **niedopełnienie** lub **przepełnienie** warunku.</span><span class="sxs-lookup"><span data-stu-id="45cba-153">If a calculation produces a value that exceeds those limits, you have an **underflow** or **overflow** condition.</span></span> <span data-ttu-id="45cba-154">Odpowiedź wydaje się zawijać między do drugiego.</span><span class="sxs-lookup"><span data-stu-id="45cba-154">The answer appears to wrap from one limit to the other.</span></span> <span data-ttu-id="45cba-155">Dodaj następujące dwa wiersze do okna interaktywnego, aby zobaczyć przykład:</span><span class="sxs-lookup"><span data-stu-id="45cba-155">Add these two lines to the interactive window to see an example:</span></span>


    ```csharp

    int what = max + 3;

    Console.WriteLine($"An example of overflow: {what}");

    ```


    <span data-ttu-id="45cba-156">Należy zauważyć, że odpowiedź jest bardzo zbliżona minimalnej (ujemnej) liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="45cba-156">Notice that the answer is very close to the minimum (negative) integer.</span></span> <span data-ttu-id="45cba-157">Jest taka sama jak `min + 2`.</span><span class="sxs-lookup"><span data-stu-id="45cba-157">It's the same as `min + 2`.</span></span> <span data-ttu-id="45cba-158">Operacja dodawania **przepełnienie** dozwolone wartości liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="45cba-158">The addition operation **overflowed** the allowed values for integers.</span></span>

    <span data-ttu-id="45cba-159">Odpowiedzią jest bardzo duża liczba ujemna, ponieważ przepełnienie "zawinięcie" z największej możliwej liczby całkowitej do najmniejszej.</span><span class="sxs-lookup"><span data-stu-id="45cba-159">The answer is a very large negative number because an overflow "wraps around" from the largest possible integer value to the smallest.</span></span>


    <span data-ttu-id="45cba-160">Istnieją inne typy liczbowe z innymi limitami i precyzją, których możesz użyć, gdy `int` typu nie odpowiada Twoim potrzebom.</span><span class="sxs-lookup"><span data-stu-id="45cba-160">There are other numeric types with different limits and precision that you would use when the `int` type doesn't meet your needs.</span></span> <span data-ttu-id="45cba-161">Przyjrzyjmy się nimi w następnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="45cba-161">Let's explore those next.</span></span>


    > [!NOTE]

    > <span data-ttu-id="45cba-162">To środowisko kodowania online jest w trybie podglądu.</span><span class="sxs-lookup"><span data-stu-id="45cba-162">This online coding experience is in preview mode.</span></span> <span data-ttu-id="45cba-163">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="45cba-163">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="45cba-164">Praca z typem double</span><span class="sxs-lookup"><span data-stu-id="45cba-164">Work with the double type</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"45cba-165\">`double` Typu numerycznego reprezentuje liczbę zmiennoprzecinkową podwójnej precyzji.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-165\">The `double` numeric type represents a double-precision floating point number.</span></span> <span data-ttu-id=\"45cba-166\">Te pojęcia mogą być dla Ciebie nowe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-166\">Those terms may be new to you.</span></span> <span data-ttu-id=\"45cba-167\">A **zmiennoprzecinkowa** numer jest przydatne do reprezentowania liczb niecałkowitoliczbowego, które mogą być bardzo małych lub dużych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-167\">A **floating point** number is useful to represent non-integral numbers that may be very large or small in magnitude.</span></span> <span data-ttu-id=\"45cba-168\">**Podwójnej precyzji** oznacza, że te liczby są przechowywane z większą dokładnością niż **pojedynczej precyzji**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-168\">**Double-precision** means that these numbers are stored using greater precision than **single-precision**.</span></span> <span data-ttu-id=\"45cba-169\">W przypadku współczesnych komputerów jest bardziej powszechne, aby użyć podwójnej precyzji niż pojedynczej precyzji liczb.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-169\">On modern computers, it is more common to use double precision than single precision numbers.</span></span>\n<span data-ttu-id=\"45cba-170\">Przyjrzyjmy się.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-170\">Let's explore.</span></span> <span data-ttu-id=\"45cba-171\">Wypróbuj poniższy kod w oknie interaktywnym i zobacz wynik:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-171\">Try the following code in the interactive window and see the result:</span></span>\n\n```csharp\ndouble a = 5;\ndouble b = 4;\ndouble c = 2;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"45cba-172\">Należy zauważyć, że odpowiedź obejmuje część dziesiętną ilorazu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-172\">Notice that the answer includes the decimal portion of the quotient.</span></span> <span data-ttu-id=\"45cba-173\">Spróbuj nieco bardziej skomplikowanego wyrażenia z liczbami podwójnej precyzji:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-173\">Try a slightly more complicated expression with doubles:</span></span>\n\n```csharp\ndouble a = 19;\ndouble b = 23;\ndouble c = 8;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"45cba-174\">Zakres liczb podwójnej precyzji jest dużo większy niż liczb całkowitych.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-174\">The range of a double value is much greater than integer values.</span></span> <span data-ttu-id=\"45cba-175\">Wypróbuj poniższy kod w oknie interaktywnym:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-175\">Try the following code in the interactive window:</span></span>\n\n```csharp\ndouble max = double.MaxValue;\ndouble min = double.MinValue;\nConsole.WriteLine($\"The range of double is {min} to {max}\");\n```\n\n<span data-ttu-id=\"45cba-176\">Te wartości są drukowane w notacji naukowej.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-176\">These values are printed out in scientific notation.</span></span> <span data-ttu-id=\"45cba-177\">Liczba po lewej stronie `E` to mantysa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-177\">The number to the left of the `E` is the significand.</span></span> <span data-ttu-id=\"45cba-178\">Liczba po prawej stronie to wykładnik jako potęga 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-178\">The number to the right is the exponent, as a power of 10.</span></span> \n\n<span data-ttu-id=\"45cba-179\">Podobnie jak liczb dziesiętnych w matematyce wartości podwójnej precyzji w języku C# mogą wystąpić błędy zaokrąglania.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-179\">Just like decimal numbers in math, doubles in C# can have rounding errors.</span></span> <span data-ttu-id=\"45cba-180\">Wypróbuj ten kod:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-180\">Try this code:</span></span>\n\n```csharp\ndouble third = 1.0 / 3.0;\nConsole.WriteLine(third);\n```\n\n<span data-ttu-id=\"45cba-181\">Należy pamiętać, że `0.3` powtarzanie nie jest dokładnie taka sama jak `1/3`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-181\">You know that `0.3` repeating is not exactly the same as `1/3`.</span></span>\n\n<span data-ttu-id=\"45cba-182\">***Wyzwanie***</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-182\">***Challenge***</span></span>\n\n<span data-ttu-id=\"45cba-183\">Spróbuj innych obliczeń z dużą liczbą, małymi liczbami, mnożeniem i dzieleniem za pomocą `double` typu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-183\">Try other calculations with large numbers, small numbers, multiplication and division using the `double` type.</span></span>  <span data-ttu-id=\"45cba-184\">Spróbuj bardziej skomplikowanych obliczeń.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-184\">Try more complicated calculations.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"45cba-185\">To środowisko kodowania online jest w trybie podglądu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-185\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"45cba-186\">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-186\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="45cba-187">Praca ze stałoprzecinkowymi typami</span><span class="sxs-lookup"><span data-stu-id="45cba-187">Work with fixed point types</span></span>
  durationInMinutes: 8
  content: "<span data-ttu-id=\"45cba-188\">W tym samouczku podstawowe typy danych liczbowych w języku C#: liczby całkowite i typ podwójnej precyzji.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-188\">You've seen the basic numeric types in C#: integers and doubles.</span></span>  <span data-ttu-id=\"45cba-189\">Istnieje jeszcze jeden typ, aby dowiedzieć się więcej: `decimal` typu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-189\">There is one other type to learn: the `decimal` type.</span></span> <span data-ttu-id=\"45cba-190\">`decimal` Typ ma mniejszy zakres, lecz większą precyzję niż `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-190\">The `decimal` type has a smaller range but greater precision than `double`.</span></span> <span data-ttu-id=\"45cba-191\">Termin **Stałoprzecinkowy** oznacza, że punkt dziesiętny (lub binarny) nie jest przenoszony.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-191\">The term **fixed point** means that the decimal point (or binary point) doesn't move.</span></span> <span data-ttu-id=\"45cba-192\">Przyjrzyjmy się:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-192\">Let's take a look:</span></span>\n\n```csharp\ndecimal min = decimal.MinValue;\ndecimal max = decimal.MaxValue;\nConsole.WriteLine($\"The range of the decimal type is {min} to {max}\");\n```\n\n<span data-ttu-id=\"45cba-193\">Należy zauważyć, że zakres jest mniejszy niż `double` typu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-193\">Notice that the range is smaller than the `double` type.</span></span> <span data-ttu-id=\"45cba-194\">Możesz zobaczyć większą precyzję typu dziesiętnego, wykonując następujący kod:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-194\">You can see the greater precision with the decimal type by trying the following code:</span></span>\n\n```csharp\ndouble a = 1.0;\ndouble b = 3.0;\nConsole.WriteLine(a / b);\n\ndecimal c = 1.0M;\ndecimal d = 3.0M;\nConsole.WriteLine(c / d);\n```\n\n<span data-ttu-id=\"45cba-195\">`M` Sufiks liczby jest wskazuje, że stałe powinny używać `decimal` typu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-195\">The `M` suffix on the numbers is how you indicate that a constant should use the `decimal` type.</span></span>\n\n<span data-ttu-id=\"45cba-196\">Należy zauważyć, że matematyczne liczbach typu dziesiętnego ma więcej cyfr po prawej stronie przecinka dziesiętnego.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-196\">Notice that the math using the decimal type has more digits to the right of the decimal point.</span></span> \n\n<span data-ttu-id=\"45cba-197\">***Wyzwanie***</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-197\">***Challenge***</span></span>\n\n<span data-ttu-id=\"45cba-198\">Teraz, gdy różne typy liczbowe, należy napisać kod obliczający pole koła o promieniu jest kosztuje 2,50 cm.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-198\">Now that you've seen the different numeric types, write code that calculates the area of a circle whose radius is 2.50 centimeters.</span></span> <span data-ttu-id=\"45cba-199\">Należy pamiętać, że pole koła to promień pomnożony pomnożonej przez PI.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-199\">Remember that the area of a circle is the radius squared multiplied by PI.</span></span> <span data-ttu-id=\"45cba-200\">Wskazówka: platforma .NET zawiera stałą dla liczby PI — <xref:System.Math.PI?displayProperty=nameWithType> używanego dla tej wartości.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-200\">One hint: .NET contains a constant for PI, <xref:System.Math.PI?displayProperty=nameWithType> that you can use for that value.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"45cba-201\">To środowisko kodowania online jest w trybie podglądu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-201\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"45cba-202\">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-202\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n\n<span data-ttu-id=\"45cba-203\">Powinna pojawić się odpowiedź zakresu 19-20.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-203\">You should get an answer between 19 and 20.</span></span>\n"
- title: <span data-ttu-id="45cba-204">Ukończenie wyzwania</span><span class="sxs-lookup"><span data-stu-id="45cba-204">Complete challenge</span></span>
  durationInMinutes: 1
  content: >
    <span data-ttu-id="45cba-205">Czy Twój pomysł był podobny do poniższego?</span><span class="sxs-lookup"><span data-stu-id="45cba-205">Did you come up with something like this?</span></span>


    ```csharp

    double radius = 2.50;

    double area = Math.PI * radius * radius;

    Console.WriteLine(area);

    ```


    <span data-ttu-id="45cba-206">Wypróbuj także inne wzory, jeśli chcesz.</span><span class="sxs-lookup"><span data-stu-id="45cba-206">Try some other formulas if you'd like.</span></span>


    > [!NOTE]

    > <span data-ttu-id="45cba-207">To środowisko kodowania online jest w trybie podglądu.</span><span class="sxs-lookup"><span data-stu-id="45cba-207">This online coding experience is in preview mode.</span></span> <span data-ttu-id="45cba-208">Jeśli napotkasz problemy, zgłoś je [w repozytorium dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="45cba-208">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: "<span data-ttu-id=\"45cba-209\">Ukończono \"liczby w elemencie C#\" interactie samouczka.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-209\">You've completed the \"Numbers in C#\" interactie tutorial.</span></span> \n\n<span data-ttu-id=\"45cba-210\">Możesz kontynuować te samouczki na własnym środowisku programistycznym.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-210\">You can continue these tutorials on your own development environment.</span></span> <span data-ttu-id=\"45cba-211\">Poznaj podstawy [rozwoju lokalnego](local-environment.md) a następnie wybierz zapoznać się z samouczkiem.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-211\">Learn the basics of [local development](local-environment.md) and then pick a tutorial.</span></span> <span data-ttu-id=\"45cba-212\">Możesz bezpośrednio do następnego samouczka, lub zacząć ponownie z [liczby w elemencie C# ](numbers-in-csharp-local.md) samouczka.</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-212\">You can directly to the next tutorial, or start again at with the [numbers in C#](numbers-in-csharp-local.md) tutorial.</span></span>\n\n<span data-ttu-id=\"45cba-213\">Możesz dowiedzieć się więcej na temat liczb w języku C# w następujących tematach:</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-213\">You can learn more about numbers in C# in the following topics:</span></span>\n\n<span data-ttu-id=\"45cba-214\">[Tabela typów całkowitych](../../language-reference/keywords/integral-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-214\">[Integral Types Table](../../language-reference/keywords/integral-types-table.md) </span></span>  \n<span data-ttu-id=\"45cba-215\">[Tabela typów zmiennoprzecinkowych](../../language-reference/keywords/floating-point-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-215\">[Floating-Point Types Table](../../language-reference/keywords/floating-point-types-table.md) </span></span>  \n<span data-ttu-id=\"45cba-216\">[Tabela typów wbudowanych](../../language-reference/keywords/built-in-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-216\">[Built-In Types Table](../../language-reference/keywords/built-in-types-table.md) </span></span>  \n<span data-ttu-id=\"45cba-217\">[Tabela niejawnych konwersji liczbowych](../../language-reference/keywords/implicit-numeric-conversions-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-217\">[Implicit Numeric Conversions Table](../../language-reference/keywords/implicit-numeric-conversions-table.md) </span></span>  \n[<span data-ttu-id=\"45cba-218\">Tabela jawnych konwersji liczbowych</span><span class=\"sxs-lookup\"><span data-stu-id=\"45cba-218\">Explicit Numeric Conversions Table</span></span>](../../language-reference/keywords/explicit-numeric-conversions-table.md)"
